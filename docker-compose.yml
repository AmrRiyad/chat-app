services:
  # Rails Service
  rails:
    build: .
    environment:
      - RAILS_ENV=development
      - RAILS_MASTER_KEY
      - MYSQL_ROOT_PASSWORD=12082002
      - REDIS_URL=redis://redis:6379
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./:/rails
      - /rails/tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Database Service
  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=12082002
      - MYSQL_DATABASE=chat_app
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Service
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  # Sidekiq Service
  sidekiq:
    build: .
    command: "bundle exec sidekiq"
    restart: always
    volumes:
      - ./:/rails
    environment:
      - RAILS_ENV=development
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - Databaseh_host=db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  # Go Service
  # go-service:
  #   build:
  #     context: ./go
  #     dockerfile: Dockerfile
  #   command: "go run main.go"
  #   restart: always
  #   environment:
  #     - REDIS_URL=redis://redis:6379
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     redis:
  #       condition: service_healthy

volumes:
  mysql_data:
  elasticsearch_data:
  redis_data:
